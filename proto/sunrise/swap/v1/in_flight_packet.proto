syntax = "proto3";
package sunrise.swap.v1;

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "sunrise/swap/v1/route.proto";

option go_package = "github.com/sunriselayer/sunrise/x/swap/types";

// PacketIndex
message PacketIndex {
  string port_id = 1;
  string channel_id = 2;
  uint64 sequence = 3;
}

// IncomingInFlightPacket
message IncomingInFlightPacket {
  PacketIndex index = 1 [(gogoproto.nullable) = false];
  bytes data = 2;
  string src_port_id = 3;
  string src_channel_id = 4;
  string timeout_height = 5;
  uint64 timeout_timestamp = 6;
  bytes ack = 7;
  RouteResult result = 8 [(gogoproto.nullable) = false];
  string interface_fee = 9 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  // change
  oneof change {
    PacketIndex outgoing_index_change = 10;
    bytes ack_change = 11;
  }
  // forward
  oneof forward {
    PacketIndex outgoing_index_forward = 12;
    bytes ack_forward = 13;
  }
}

// OutgoingInFlightPacket
message OutgoingInFlightPacket {
  PacketIndex index = 1 [(gogoproto.nullable) = false];
  PacketIndex ack_waiting_index = 2 [(gogoproto.nullable) = false];
  int32 retries_remaining = 3;
}
